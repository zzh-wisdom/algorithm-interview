
cpp.o:	file format Mach-O 64-bit x86-64

Disassembly of section __TEXT,__text:
_main:
; int main() {
       0:	55 	pushq	%rbp
       1:	48 89 e5 	movq	%rsp, %rbp
       4:	48 83 ec 20 	subq	$32, %rsp
       8:	48 8b 05 00 00 00 00 	movq	(%rip), %rax
       f:	c7 45 fc 00 00 00 00 	movl	$0, -4(%rbp)
; global_g_unin = global_g_in0 + global_g_in1;
      16:	8b 0d 00 00 00 00 	movl	(%rip), %ecx
      1c:	03 0d 00 00 00 00 	addl	(%rip), %ecx
      22:	89 08 	movl	%ecx, (%rax)
; global_s_unin = global_s_in0 + global_s_in1;
      24:	8b 0d 00 00 00 00 	movl	(%rip), %ecx
      2a:	03 0d 00 00 00 00 	addl	(%rip), %ecx
      30:	89 0d 00 00 00 00 	movl	%ecx, (%rip)
; local_static_unin = local_static_in0 + local_static_in1;
      36:	8b 0d 00 00 00 00 	movl	(%rip), %ecx
      3c:	03 0d 00 00 00 00 	addl	(%rip), %ecx
      42:	89 0d 00 00 00 00 	movl	%ecx, (%rip)
; strcpy(s_c_unin, s_c_in);
      48:	48 8d 3d 00 00 00 00 	leaq	(%rip), %rdi
      4f:	48 8d 35 00 00 00 00 	leaq	(%rip), %rsi
      56:	ba 14 00 00 00 	movl	$20, %edx
      5b:	e8 00 00 00 00 	callq	0 <_main+0x60>
      60:	48 8b 15 00 00 00 00 	movq	(%rip), %rdx
; int num = global_g_unin + global_s_unin + local_static_unin;
      67:	8b 0a 	movl	(%rdx), %ecx
      69:	03 0d 00 00 00 00 	addl	(%rip), %ecx
      6f:	03 0d 00 00 00 00 	addl	(%rip), %ecx
      75:	89 4d f8 	movl	%ecx, -8(%rbp)
; printf("%s, %d\n", s_c_unin, num);
      78:	8b 55 f8 	movl	-8(%rbp), %edx
      7b:	48 8d 3d 52 00 00 00 	leaq	82(%rip), %rdi
      82:	48 8d 35 00 00 00 00 	leaq	(%rip), %rsi
      89:	48 89 45 f0 	movq	%rax, -16(%rbp)
      8d:	b0 00 	movb	$0, %al
      8f:	e8 00 00 00 00 	callq	0 <_main+0x94>
; return num;
      94:	8b 4d f8 	movl	-8(%rbp), %ecx
      97:	89 45 ec 	movl	%eax, -20(%rbp)
      9a:	89 c8 	movl	%ecx, %eax
      9c:	48 83 c4 20 	addq	$32, %rsp
      a0:	5d 	popq	%rbp
      a1:	c3 	retq
Sections:
Idx Name          Size      Address          Type
  0 __text        000000a2 0000000000000000 TEXT 
  1 __common      00000004 0000000000000800 BSS
  2 __data        00000024 00000000000000b0 DATA 
  3 __bss         00000024 0000000000000810 BSS
  4 __cstring     00000008 00000000000000d4 DATA 
  5 __debug_str   0000011e 00000000000000dc DATA 
  6 __debug_abbrev 00000081 00000000000001fa DATA 
  7 __debug_info  0000015b 000000000000027b DATA 
  8 __debug_macinfo 00000001 00000000000003d6 DATA 
  9 __apple_names 00000170 00000000000003d7 DATA 
 10 __apple_objc  00000024 0000000000000547 DATA 
 11 __apple_namespac 00000024 000000000000056b DATA 
 12 __apple_types 00000085 000000000000058f DATA 
 13 __debug_gnu_pubn 000000e7 0000000000000614 DATA 
 14 __debug_gnu_pubt 00000025 00000000000006fb DATA 
 15 __compact_unwind 00000020 0000000000000720 DATA 
 16 __eh_frame    00000040 0000000000000740 DATA 
 17 __debug_line  0000007f 0000000000000780 DATA 

SYMBOL TABLE:
0000000000000818 l     O __DATA,__bss	_global_s_in0
00000000000000b8 l     O __DATA,__data	_global_s_in1
000000000000081c l     O __DATA,__bss	_global_s_unin
0000000000000810 l     O __DATA,__bss	_main.local_static_in0
00000000000000b4 l     O __DATA,__data	_main.local_static_in1
0000000000000814 l     O __DATA,__bss	_main.local_static_unin
0000000000000820 l     O __DATA,__bss	_s_c_unin
00000000000000c0 l     O __DATA,__data	_s_c_in
0000000000000800 g     O __DATA,__common	_global_g_in0
00000000000000b0 g     O __DATA,__data	_global_g_in1
0000000000000000 g     F __TEXT,__text	_main
0000000000000000         *UND*	___strcpy_chk
0000000000000004         *COM*		 00000004 _global_g_unin
0000000000000000         *UND*	_printf
